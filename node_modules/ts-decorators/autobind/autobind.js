/**
 * @name autobind
 * @type {function}
 * @param target
 * @param propertyKey
 * @param descriptor
 * @returns {any}
 * @description Method decorator that binds it to the instance of the class it is defined on
 */
/**
 * @name autobind
 * @type {function}
 * @param target
 * @param propertyKey
 * @param descriptor
 * @returns {any}
 * @description Method decorator that binds it to the instance of the class it is defined on
 */ export function autobind(target, propertyKey, descriptor) {
    var method = descriptor.value;
    if (typeof method !== 'function') {
        throw new Error("@autobind decorator can only be applied to methods not: " + typeof method);
    }
    return {
        configurable: descriptor.configurable,
        enumerable: descriptor.enumerable,
        get: function () {
            return method.bind(this);
        }
    };
}
//# sourceMappingURL=autobind.js.map